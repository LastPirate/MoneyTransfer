/*
 * This file is generated by jOOQ.
 */
package com.hometask.moneytransfer.model.db.tables.daos;


import com.hometask.moneytransfer.model.db.tables.Wallet;
import com.hometask.moneytransfer.model.db.tables.records.WalletRecord;

import java.math.BigDecimal;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WalletDao extends DAOImpl<WalletRecord, com.hometask.moneytransfer.model.db.tables.pojos.Wallet, Long> {

    /**
     * Create a new WalletDao without any configuration
     */
    public WalletDao() {
        super(Wallet.WALLET, com.hometask.moneytransfer.model.db.tables.pojos.Wallet.class);
    }

    /**
     * Create a new WalletDao with an attached configuration
     */
    public WalletDao(Configuration configuration) {
        super(Wallet.WALLET, com.hometask.moneytransfer.model.db.tables.pojos.Wallet.class, configuration);
    }

    @Override
    public Long getId(com.hometask.moneytransfer.model.db.tables.pojos.Wallet object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hometask.moneytransfer.model.db.tables.pojos.Wallet> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Wallet.WALLET.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<com.hometask.moneytransfer.model.db.tables.pojos.Wallet> fetchById(Long... values) {
        return fetch(Wallet.WALLET.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public com.hometask.moneytransfer.model.db.tables.pojos.Wallet fetchOneById(Long value) {
        return fetchOne(Wallet.WALLET.ID, value);
    }

    /**
     * Fetch records that have <code>CURRENCY BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hometask.moneytransfer.model.db.tables.pojos.Wallet> fetchRangeOfCurrency(String lowerInclusive, String upperInclusive) {
        return fetchRange(Wallet.WALLET.CURRENCY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CURRENCY IN (values)</code>
     */
    public List<com.hometask.moneytransfer.model.db.tables.pojos.Wallet> fetchByCurrency(String... values) {
        return fetch(Wallet.WALLET.CURRENCY, values);
    }

    /**
     * Fetch records that have <code>ADDRESS BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hometask.moneytransfer.model.db.tables.pojos.Wallet> fetchRangeOfAddress(String lowerInclusive, String upperInclusive) {
        return fetchRange(Wallet.WALLET.ADDRESS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ADDRESS IN (values)</code>
     */
    public List<com.hometask.moneytransfer.model.db.tables.pojos.Wallet> fetchByAddress(String... values) {
        return fetch(Wallet.WALLET.ADDRESS, values);
    }

    /**
     * Fetch records that have <code>BALANCE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hometask.moneytransfer.model.db.tables.pojos.Wallet> fetchRangeOfBalance(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(Wallet.WALLET.BALANCE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BALANCE IN (values)</code>
     */
    public List<com.hometask.moneytransfer.model.db.tables.pojos.Wallet> fetchByBalance(BigDecimal... values) {
        return fetch(Wallet.WALLET.BALANCE, values);
    }

    /**
     * Fetch records that have <code>ACCOUNT_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hometask.moneytransfer.model.db.tables.pojos.Wallet> fetchRangeOfAccountId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Wallet.WALLET.ACCOUNT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ACCOUNT_ID IN (values)</code>
     */
    public List<com.hometask.moneytransfer.model.db.tables.pojos.Wallet> fetchByAccountId(Long... values) {
        return fetch(Wallet.WALLET.ACCOUNT_ID, values);
    }
}
