/*
 * This file is generated by jOOQ.
 */
package com.hometask.moneytransfer.model.tables.records;


import com.hometask.moneytransfer.model.tables.Wallet;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class WalletRecord extends UpdatableRecordImpl<WalletRecord> implements Record5<Long, String, String, BigDecimal, Long> {

    private static final long serialVersionUID = 1209555030;

    /**
     * Setter for <code>PUBLIC.WALLET.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.WALLET.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.WALLET.CURRENCY</code>.
     */
    public void setCurrency(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.WALLET.CURRENCY</code>.
     */
    public String getCurrency() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.WALLET.ADDRESS</code>.
     */
    public void setAddress(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.WALLET.ADDRESS</code>.
     */
    public String getAddress() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.WALLET.BALANCE</code>.
     */
    public void setBalance(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.WALLET.BALANCE</code>.
     */
    public BigDecimal getBalance() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>PUBLIC.WALLET.ACCOUNT_ID</code>.
     */
    public void setAccountId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.WALLET.ACCOUNT_ID</code>.
     */
    public Long getAccountId() {
        return (Long) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, BigDecimal, Long> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, BigDecimal, Long> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Wallet.WALLET.ID;
    }

    @Override
    public Field<String> field2() {
        return Wallet.WALLET.CURRENCY;
    }

    @Override
    public Field<String> field3() {
        return Wallet.WALLET.ADDRESS;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Wallet.WALLET.BALANCE;
    }

    @Override
    public Field<Long> field5() {
        return Wallet.WALLET.ACCOUNT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getCurrency();
    }

    @Override
    public String component3() {
        return getAddress();
    }

    @Override
    public BigDecimal component4() {
        return getBalance();
    }

    @Override
    public Long component5() {
        return getAccountId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getCurrency();
    }

    @Override
    public String value3() {
        return getAddress();
    }

    @Override
    public BigDecimal value4() {
        return getBalance();
    }

    @Override
    public Long value5() {
        return getAccountId();
    }

    @Override
    public WalletRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public WalletRecord value2(String value) {
        setCurrency(value);
        return this;
    }

    @Override
    public WalletRecord value3(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public WalletRecord value4(BigDecimal value) {
        setBalance(value);
        return this;
    }

    @Override
    public WalletRecord value5(Long value) {
        setAccountId(value);
        return this;
    }

    @Override
    public WalletRecord values(Long value1, String value2, String value3, BigDecimal value4, Long value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached WalletRecord
     */
    public WalletRecord() {
        super(Wallet.WALLET);
    }

    /**
     * Create a detached, initialised WalletRecord
     */
    public WalletRecord(Long id, String currency, String address, BigDecimal balance, Long accountId) {
        super(Wallet.WALLET);

        set(0, id);
        set(1, currency);
        set(2, address);
        set(3, balance);
        set(4, accountId);
    }
}
