/*
 * This file is generated by jOOQ.
 */
package com.hometask.moneytransfer.model.tables.records;


import com.hometask.moneytransfer.model.tables.Transfer;

import java.math.BigDecimal;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransferRecord extends UpdatableRecordImpl<TransferRecord> implements Record6<Long, BigDecimal, Byte, String, Long, Long> {

    private static final long serialVersionUID = 1110332828;

    /**
     * Setter for <code>PUBLIC.TRANSFER.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSFER.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.TRANSFER.QUANTITY</code>.
     */
    public void setQuantity(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSFER.QUANTITY</code>.
     */
    public BigDecimal getQuantity() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>PUBLIC.TRANSFER.EXCHANGE_RATE</code>.
     */
    public void setExchangeRate(Byte value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSFER.EXCHANGE_RATE</code>.
     */
    public Byte getExchangeRate() {
        return (Byte) get(2);
    }

    /**
     * Setter for <code>PUBLIC.TRANSFER.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSFER.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.TRANSFER.SENDER_ID</code>.
     */
    public void setSenderId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSFER.SENDER_ID</code>.
     */
    public Long getSenderId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>PUBLIC.TRANSFER.RECIPIENT_ID</code>.
     */
    public void setRecipientId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.TRANSFER.RECIPIENT_ID</code>.
     */
    public Long getRecipientId() {
        return (Long) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, BigDecimal, Byte, String, Long, Long> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, BigDecimal, Byte, String, Long, Long> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Transfer.TRANSFER.ID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Transfer.TRANSFER.QUANTITY;
    }

    @Override
    public Field<Byte> field3() {
        return Transfer.TRANSFER.EXCHANGE_RATE;
    }

    @Override
    public Field<String> field4() {
        return Transfer.TRANSFER.DESCRIPTION;
    }

    @Override
    public Field<Long> field5() {
        return Transfer.TRANSFER.SENDER_ID;
    }

    @Override
    public Field<Long> field6() {
        return Transfer.TRANSFER.RECIPIENT_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public BigDecimal component2() {
        return getQuantity();
    }

    @Override
    public Byte component3() {
        return getExchangeRate();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Long component5() {
        return getSenderId();
    }

    @Override
    public Long component6() {
        return getRecipientId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public BigDecimal value2() {
        return getQuantity();
    }

    @Override
    public Byte value3() {
        return getExchangeRate();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public Long value5() {
        return getSenderId();
    }

    @Override
    public Long value6() {
        return getRecipientId();
    }

    @Override
    public TransferRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TransferRecord value2(BigDecimal value) {
        setQuantity(value);
        return this;
    }

    @Override
    public TransferRecord value3(Byte value) {
        setExchangeRate(value);
        return this;
    }

    @Override
    public TransferRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TransferRecord value5(Long value) {
        setSenderId(value);
        return this;
    }

    @Override
    public TransferRecord value6(Long value) {
        setRecipientId(value);
        return this;
    }

    @Override
    public TransferRecord values(Long value1, BigDecimal value2, Byte value3, String value4, Long value5, Long value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransferRecord
     */
    public TransferRecord() {
        super(Transfer.TRANSFER);
    }

    /**
     * Create a detached, initialised TransferRecord
     */
    public TransferRecord(Long id, BigDecimal quantity, Byte exchangeRate, String description, Long senderId, Long recipientId) {
        super(Transfer.TRANSFER);

        set(0, id);
        set(1, quantity);
        set(2, exchangeRate);
        set(3, description);
        set(4, senderId);
        set(5, recipientId);
    }
}
